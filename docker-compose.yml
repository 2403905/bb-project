version: "3"
services:

   kafka:
     image: 'bitnami/kafka:3.3'
     restart: on-failure:10
     ports:
       - 9092:9092
     volumes:
       - kafka_data:/bitnami
     networks:
       - bb
     environment:
       - KAFKA_ENABLE_KRAFT=yes
       - KAFKA_CFG_PROCESS_ROLES=broker,controller
       - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
       - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://kafka:29092
       - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:29092
       - KAFKA_BROKER_ID=1
       - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
       - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
       - ALLOW_PLAINTEXT_LISTENER=yes

   postgres:
     image: postgres:14.6
     restart: always
     ports:
       - 5432:5432
     volumes:
       - pg_data:/data/postgres
     networks:
       - bb
     environment:
       POSTGRES_USER: ${POSTGRES_USER:-default_user}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpwd}
       POSTGRES_DB: bb_db
       PGDATA: /data/postgres

   migrate:
     image: migrate/migrate
     restart: on-failure:10
     networks:
       - bb
     volumes:
       - ./db/migration:/migration
     command: ["-path", "/migration", "-database",  "postgres://${POSTGRES_USER:-default_user}:${POSTGRES_PASSWORD:-devpwd}@postgres:5432/bb_db?sslmode=disable", "up"]
     depends_on:
       - postgres

   service:
     build: .
     networks:
       - bb
     ports:
       - "9090:9090"
     environment:
       API_LISTENER: 0.0.0.0:9090
       PG_DSN: ${PG_DSN:-postgres://default_user:devpwd@postgres:5432/bb_db?sslmode=disable}
       KAFKA_HOST: kafka:29092
       KAFKA_GROUP_ID: group_id_1
       KAFKA_TOPIC: 'bb_project'
       OBJECT_ENDPOINT: http://tester-service:9010/objects/
     depends_on:
       - postgres
     depends_on:
       migrate:
         condition: service_completed_successfully
     depends_on:
       - kafka

   tester-service:
     build:
       context: .
       dockerfile: tester_service/Dockerfile
     networks:
       - bb
     restart: on-failure:10
     depends_on:
       - service

volumes:
  kafka_data:
  pg_data:

networks:
  bb:
    driver: bridge
